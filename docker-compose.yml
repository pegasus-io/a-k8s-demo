version: '3.2'

services:

#
# ----------- KUBEONE GITOPS able to :
#             => Deploy the Atlantis service to Heroku
#             => Backup the Atlantis service running on Heroku
#             => Restore the Atlantis service running on Heroku
  atlantis_autopilot:
    image: pegasusio/creshtest_atlantis_autopilot:0.0.1
    environment:
      # Git repo where the autopilot is versioned
      - SSH_URI_TO_GIT_REPO=$SSH_URI_TO_GIT_REPO

#
# ----------- KUBEONE GITOPS able to :
#             => Bootstrap the Atlantis git repo, which Atlantis
#                will use to operate the AWS IAAS and the
#                Kubernetes Cluster inside of the AWS tenant.
#             => Bootstrap the Atlantis git repo, which Atlantis
#                will use to operate the AWS IAAS and the
#                Kubernetes Cluster inside of the AWS tenant.

  kubeone_gitops_operator:
    # image: jblass3ll3.world/a-k8s-demo/kubeone_operator:0.0.1
    # From docker.io
    image: pegasusio/creshtest_kubeone_operator:0.0.1
    container_name: 'kubeone_gitops_operator'
    restart: always
    stdin_open: true
    tty: true
    # entrypoint: ["/bin/bash"]
    # command: ["/bin/bash"]
    environment:
      - SSH_URI_TO_HELM_CHART=$SSH_URI_TO_HELM_CHART
      - SSH_URI_TO_ATLANTIS_WATCHED_GIT=$SSH_URI_TO_ATLANTIS_WATCHED_GIT
      # +++
      # +++>> BEE BOT
      # +++
      # Also need 'beeio' robot secrets :
      # => SSH private key to git push over ssh.
      # => AWS credentials
      # Both being
      # where inside the container, the bot will find the private key to
      # git push to github.com / gitlab.com
      # also see volume [/kubeonebee/.secrets] mounted from outside the container
      # --
      # Bumblebee knows where its SSH secrets are, bumblebee just needs the private key filename
      - BUMBLEBEE_SSH_PRIVATE_KEY_FILENAME=${BUMBLEBEE_SSH_PRIVATE_KEY_FILENAME}
      - BUMBLEBEE_GIT_SSH_COMMAND=${BUMBLEBEE_GIT_SSH_COMMAND}
      # Where Bumblebee will find its aws credentials inside container
      - BUMBLEBEE_AWS_CREDENTIALS_FILE=${BUMBLEBEE_HOME_INSIDE_CONTAINER}/.secrets/.aws/credentials
      # just to dsplay nice litlle output message in the docker logs :
      - BUMBLEBEE_SECRETS_VAULT_OUTSIDE_CONTAINERS=${BUMBLEBEE_SECRETS_VAULT_OUTSIDE_CONTAINERS}
    volumes:
      - ${BUMBLEBEE_SECRETS_VAULT_OUTSIDE_CONTAINERS}:/kubeonebee/.secrets:rw
#
# ----------- HELM OPS to test Helm Chart deployment of
#             the NodeJS Express TypeScript App to the
#             K8S Cluster on AWS.
  helm_operator_deployer:
    # image: jblass3ll3.world/a-k8s-demo/helm_operator:0.0.1
    # From docker.io
    image: pegasusio/creshtest_helm_operator:0.0.1
    environment:
      - SSH_URI_TO_HELM_CHART=$SSH_URI_TO_HELM_CHART
#
# ----------- ANSIBLE OPS to test the Ansible playbook which will
#             be executed after the terraform apply by https://runatlantis.io, by the
#             Terraform Ansible Provisioner
#
#             This ansible playbook will execute :
#               => The kubeone command to spawn the K8S Cluster on AWS
#               => The Helm Chart deploying the NodeJS Express TypeScript App to the K8S Cluster on AWS
#
#   ansible_terraprovisioner:
#     # image: jblass3ll3.world/a-k8s-demo/helm_operator:0.0.1
#     # From docker.io
#     image: pegasusio/creshtest_helm_operator:0.0.1
#     environment:
#       - SSH_URI_TO_HELM_CHART=$SSH_URI_TO_HELM_CHART


#
# ----------- AWS CLI OPS : to perform various live tests on the provisioned AWS infra
  awscli_op1:
    # image: jblass3ll3.world/a-k8s-demo/aws-cli-v2:0.0.1
    image: pegasusio/creshtest_aws-cli-v2:0.0.1
    environment:
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_DEFAULT_REGION=${AWS_DEFAULT_REGION}
    # command: sh -c "aws autoscaling describe-auto-scaling-groups | jq -r '.AutoScalingGroups[] | select(.AutoScalingGroupName | startswith(\"${STACK_NAME}-NodeAsg\")).AutoScalingGroupName'"
    volumes:
      - $PWD/aws-cli/operator1:/aws/playground:rw
      # - ${BUMBLEBEE_SECRETS_VAULT_OUTSIDE_CONTAINERS}:/aws/.secrets:rw
      - ${BUMBLEBEE_SECRETS_VAULT_OUTSIDE_CONTAINERS}/.aws/credentials:/hgome/beeio/.aws/credentials:rw
    restart: always
    stdin_open: true
    tty: true
